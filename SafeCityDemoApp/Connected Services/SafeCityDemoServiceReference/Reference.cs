//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SafeCityDemoApp.SafeCityDemoServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Incident", Namespace="http://schemas.datacontract.org/2004/07/SafeCityDemo.Models")]
    [System.SerializableAttribute()]
    public partial class Incident : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CallerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CallerNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SafeCityDemoApp.SafeCityDemoServiceReference.Category CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SafeCityDemoApp.SafeCityDemoServiceReference.Location LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LocationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CallerName {
            get {
                return this.CallerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CallerNameField, value) != true)) {
                    this.CallerNameField = value;
                    this.RaisePropertyChanged("CallerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CallerNumber {
            get {
                return this.CallerNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CallerNumberField, value) != true)) {
                    this.CallerNumberField = value;
                    this.RaisePropertyChanged("CallerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SafeCityDemoApp.SafeCityDemoServiceReference.Category Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryId {
            get {
                return this.CategoryIdField;
            }
            set {
                if ((this.CategoryIdField.Equals(value) != true)) {
                    this.CategoryIdField = value;
                    this.RaisePropertyChanged("CategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SafeCityDemoApp.SafeCityDemoServiceReference.Location Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LocationId {
            get {
                return this.LocationIdField;
            }
            set {
                if ((this.LocationIdField.Equals(value) != true)) {
                    this.LocationIdField = value;
                    this.RaisePropertyChanged("LocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number {
            get {
                return this.NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Category", Namespace="http://schemas.datacontract.org/2004/07/SafeCityDemo.Models")]
    [System.SerializableAttribute()]
    public partial class Category : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Location", Namespace="http://schemas.datacontract.org/2004/07/SafeCityDemo.Models")]
    [System.SerializableAttribute()]
    public partial class Location : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SafeCityDemoServiceReference.ISafeCityDemoServiceContract")]
    public interface ISafeCityDemoServiceContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISafeCityDemoServiceContract/GetData", ReplyAction="http://tempuri.org/ISafeCityDemoServiceContract/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISafeCityDemoServiceContract/GetData", ReplyAction="http://tempuri.org/ISafeCityDemoServiceContract/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISafeCityDemoServiceContract/GetAllIncidents", ReplyAction="http://tempuri.org/ISafeCityDemoServiceContract/GetAllIncidentsResponse")]
        SafeCityDemoApp.SafeCityDemoServiceReference.Incident[] GetAllIncidents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISafeCityDemoServiceContract/GetAllIncidents", ReplyAction="http://tempuri.org/ISafeCityDemoServiceContract/GetAllIncidentsResponse")]
        System.Threading.Tasks.Task<SafeCityDemoApp.SafeCityDemoServiceReference.Incident[]> GetAllIncidentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISafeCityDemoServiceContract/GetIncidentByNumber", ReplyAction="http://tempuri.org/ISafeCityDemoServiceContract/GetIncidentByNumberResponse")]
        SafeCityDemoApp.SafeCityDemoServiceReference.Incident GetIncidentByNumber(string Number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISafeCityDemoServiceContract/GetIncidentByNumber", ReplyAction="http://tempuri.org/ISafeCityDemoServiceContract/GetIncidentByNumberResponse")]
        System.Threading.Tasks.Task<SafeCityDemoApp.SafeCityDemoServiceReference.Incident> GetIncidentByNumberAsync(string Number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISafeCityDemoServiceContract/GetIncidentByCallerNumber", ReplyAction="http://tempuri.org/ISafeCityDemoServiceContract/GetIncidentByCallerNumberResponse" +
            "")]
        SafeCityDemoApp.SafeCityDemoServiceReference.Incident[] GetIncidentByCallerNumber(string CallerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISafeCityDemoServiceContract/GetIncidentByCallerNumber", ReplyAction="http://tempuri.org/ISafeCityDemoServiceContract/GetIncidentByCallerNumberResponse" +
            "")]
        System.Threading.Tasks.Task<SafeCityDemoApp.SafeCityDemoServiceReference.Incident[]> GetIncidentByCallerNumberAsync(string CallerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISafeCityDemoServiceContract/GetCategories", ReplyAction="http://tempuri.org/ISafeCityDemoServiceContract/GetCategoriesResponse")]
        SafeCityDemoApp.SafeCityDemoServiceReference.Category[] GetCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISafeCityDemoServiceContract/GetCategories", ReplyAction="http://tempuri.org/ISafeCityDemoServiceContract/GetCategoriesResponse")]
        System.Threading.Tasks.Task<SafeCityDemoApp.SafeCityDemoServiceReference.Category[]> GetCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISafeCityDemoServiceContract/GetLocations", ReplyAction="http://tempuri.org/ISafeCityDemoServiceContract/GetLocationsResponse")]
        SafeCityDemoApp.SafeCityDemoServiceReference.Location[] GetLocations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISafeCityDemoServiceContract/GetLocations", ReplyAction="http://tempuri.org/ISafeCityDemoServiceContract/GetLocationsResponse")]
        System.Threading.Tasks.Task<SafeCityDemoApp.SafeCityDemoServiceReference.Location[]> GetLocationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISafeCityDemoServiceContract/AddIncident", ReplyAction="http://tempuri.org/ISafeCityDemoServiceContract/AddIncidentResponse")]
        int AddIncident(SafeCityDemoApp.SafeCityDemoServiceReference.Incident incident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISafeCityDemoServiceContract/AddIncident", ReplyAction="http://tempuri.org/ISafeCityDemoServiceContract/AddIncidentResponse")]
        System.Threading.Tasks.Task<int> AddIncidentAsync(SafeCityDemoApp.SafeCityDemoServiceReference.Incident incident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISafeCityDemoServiceContract/UpdateIncident", ReplyAction="http://tempuri.org/ISafeCityDemoServiceContract/UpdateIncidentResponse")]
        int UpdateIncident(string number, SafeCityDemoApp.SafeCityDemoServiceReference.Incident UpdatedIncident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISafeCityDemoServiceContract/UpdateIncident", ReplyAction="http://tempuri.org/ISafeCityDemoServiceContract/UpdateIncidentResponse")]
        System.Threading.Tasks.Task<int> UpdateIncidentAsync(string number, SafeCityDemoApp.SafeCityDemoServiceReference.Incident UpdatedIncident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISafeCityDemoServiceContract/AddCategory", ReplyAction="http://tempuri.org/ISafeCityDemoServiceContract/AddCategoryResponse")]
        int AddCategory(SafeCityDemoApp.SafeCityDemoServiceReference.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISafeCityDemoServiceContract/AddCategory", ReplyAction="http://tempuri.org/ISafeCityDemoServiceContract/AddCategoryResponse")]
        System.Threading.Tasks.Task<int> AddCategoryAsync(SafeCityDemoApp.SafeCityDemoServiceReference.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISafeCityDemoServiceContract/AddLocation", ReplyAction="http://tempuri.org/ISafeCityDemoServiceContract/AddLocationResponse")]
        int AddLocation(SafeCityDemoApp.SafeCityDemoServiceReference.Location location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISafeCityDemoServiceContract/AddLocation", ReplyAction="http://tempuri.org/ISafeCityDemoServiceContract/AddLocationResponse")]
        System.Threading.Tasks.Task<int> AddLocationAsync(SafeCityDemoApp.SafeCityDemoServiceReference.Location location);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISafeCityDemoServiceContractChannel : SafeCityDemoApp.SafeCityDemoServiceReference.ISafeCityDemoServiceContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SafeCityDemoServiceContractClient : System.ServiceModel.ClientBase<SafeCityDemoApp.SafeCityDemoServiceReference.ISafeCityDemoServiceContract>, SafeCityDemoApp.SafeCityDemoServiceReference.ISafeCityDemoServiceContract {
        
        public SafeCityDemoServiceContractClient() {
        }
        
        public SafeCityDemoServiceContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SafeCityDemoServiceContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SafeCityDemoServiceContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SafeCityDemoServiceContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public SafeCityDemoApp.SafeCityDemoServiceReference.Incident[] GetAllIncidents() {
            return base.Channel.GetAllIncidents();
        }
        
        public System.Threading.Tasks.Task<SafeCityDemoApp.SafeCityDemoServiceReference.Incident[]> GetAllIncidentsAsync() {
            return base.Channel.GetAllIncidentsAsync();
        }
        
        public SafeCityDemoApp.SafeCityDemoServiceReference.Incident GetIncidentByNumber(string Number) {
            return base.Channel.GetIncidentByNumber(Number);
        }
        
        public System.Threading.Tasks.Task<SafeCityDemoApp.SafeCityDemoServiceReference.Incident> GetIncidentByNumberAsync(string Number) {
            return base.Channel.GetIncidentByNumberAsync(Number);
        }
        
        public SafeCityDemoApp.SafeCityDemoServiceReference.Incident[] GetIncidentByCallerNumber(string CallerNumber) {
            return base.Channel.GetIncidentByCallerNumber(CallerNumber);
        }
        
        public System.Threading.Tasks.Task<SafeCityDemoApp.SafeCityDemoServiceReference.Incident[]> GetIncidentByCallerNumberAsync(string CallerNumber) {
            return base.Channel.GetIncidentByCallerNumberAsync(CallerNumber);
        }
        
        public SafeCityDemoApp.SafeCityDemoServiceReference.Category[] GetCategories() {
            return base.Channel.GetCategories();
        }
        
        public System.Threading.Tasks.Task<SafeCityDemoApp.SafeCityDemoServiceReference.Category[]> GetCategoriesAsync() {
            return base.Channel.GetCategoriesAsync();
        }
        
        public SafeCityDemoApp.SafeCityDemoServiceReference.Location[] GetLocations() {
            return base.Channel.GetLocations();
        }
        
        public System.Threading.Tasks.Task<SafeCityDemoApp.SafeCityDemoServiceReference.Location[]> GetLocationsAsync() {
            return base.Channel.GetLocationsAsync();
        }
        
        public int AddIncident(SafeCityDemoApp.SafeCityDemoServiceReference.Incident incident) {
            return base.Channel.AddIncident(incident);
        }
        
        public System.Threading.Tasks.Task<int> AddIncidentAsync(SafeCityDemoApp.SafeCityDemoServiceReference.Incident incident) {
            return base.Channel.AddIncidentAsync(incident);
        }
        
        public int UpdateIncident(string number, SafeCityDemoApp.SafeCityDemoServiceReference.Incident UpdatedIncident) {
            return base.Channel.UpdateIncident(number, UpdatedIncident);
        }
        
        public System.Threading.Tasks.Task<int> UpdateIncidentAsync(string number, SafeCityDemoApp.SafeCityDemoServiceReference.Incident UpdatedIncident) {
            return base.Channel.UpdateIncidentAsync(number, UpdatedIncident);
        }
        
        public int AddCategory(SafeCityDemoApp.SafeCityDemoServiceReference.Category category) {
            return base.Channel.AddCategory(category);
        }
        
        public System.Threading.Tasks.Task<int> AddCategoryAsync(SafeCityDemoApp.SafeCityDemoServiceReference.Category category) {
            return base.Channel.AddCategoryAsync(category);
        }
        
        public int AddLocation(SafeCityDemoApp.SafeCityDemoServiceReference.Location location) {
            return base.Channel.AddLocation(location);
        }
        
        public System.Threading.Tasks.Task<int> AddLocationAsync(SafeCityDemoApp.SafeCityDemoServiceReference.Location location) {
            return base.Channel.AddLocationAsync(location);
        }
    }
}
